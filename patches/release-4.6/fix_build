diff --git a/mak/OpenACD.sipxecs.mk b/mak/OpenACD.sipxecs.mk
index b55a7d9..d5b0d1f 100644
--- a/mak/OpenACD.sipxecs.mk
+++ b/mak/OpenACD.sipxecs.mk
@@ -9,6 +9,6 @@ OpenACD_SRPM_DEFS = --define "buildno $(OpenACD_REV)"
 OpenACD_RPM_DEFS = --define="buildno $(OpenACD_REV)"
 OpenACD_BUILD_ON_CHANGE = $(DEFAULT_ON_CHANGE) -a -not -name commit_ver.hrl
 
-OpenACD.dist :
+OpenACD.dist : $(OpenACD_GIT_SUBMODULE)
 	test -d OpenACD || mkdir -p OpenACD
 	make -C $(SRC)/OpenACD dist DESTDIR=$(abspath .)/OpenACD/
diff --git a/mak/build.mk.in b/mak/build.mk.in
index fe8e062..58f9ade 100644
--- a/mak/build.mk.in
+++ b/mak/build.mk.in
@@ -4,11 +4,10 @@
 OPTIONS = @OPTIONS@
 DOWNLOAD_LIB_CACHE = @DOWNLOAD_LIB_CACHE@
 
-git_submodules = $(shell sed -e '/^\[submodule/! d' -e 's/^\[submodule "\(.*\)"]$$/\1/g' $(wildcard $(SRC)/.gitmodules $(SRC)/custom/.gitmodules))
+git_submodules = $(shell sed -e '/^\[submodule/! d' -e 's/^\[submodule "\(.*\)"]$$/\1/g' $(wildcard $(SRC)/.gitmodules))
+git_custommodules = $(shell sed -e '/^\[submodule/! d' -e 's/^\[submodule "\(.*\)"]$$/\1/g' $(wildcard $(SRC)/custom/.gitmodules))
 
-# pull in dependency make fragments
 include $(SRC)/mak/modules.mk
-include $(SRC)/mak/*.sipxecs.mk
 include $(SRC)/*/.sipxecs.mk
 
 # Example .modules-include files
@@ -23,8 +22,8 @@ $(eval sipx_include = $(shell test -f .modules-include && \
 $(eval sipx_exclude = $(shell test -f .modules-exclude && \
 	cat .modules-exclude))
 
-sipx := $(sort $(filter-out $(sipx_exclude) $(lib),$(sipx_include)))
-lib := $(sort $(filter-out $(sipx_exclude) $(sipx),$(lib) $(sipx_include)))
+sipx := $(filter-out $(sipx_exclude) $(lib),$(sipx_include))
+lib := $(filter-out $(sipx_exclude) $(sipx),$(lib) $(sipx_include))
 
 help.sipx=Build all sipx components including targets autoreconf, configure, all and install targets
 build sipx :
@@ -37,6 +36,14 @@ $(foreach P,$(sipx),$(eval $(P)_TAR = $(P)/$$(call lowercase,$(P))-$(PACKAGE_VER
 # many submodules to be defined, but only requested submodules to be loaded. There
 # is no need to specify which projects are git submodules, all of this is handled
 # by these this section.
+$(foreach M,$(git_custommodules),$(eval $(M)_GIT_SUBMODULE = $(SRC)/custom/$(M)/.git))
+.PRECIOUS: $(SRC)/custom/%/.git
+$(SRC)/custom/%/.git :
+	cd $(SRC)/custom; \
+	  git submodule init $*; \
+	  git submodule update $*; \
+	ln -s $(SRC)/custom/$* $(SRC)
+
 $(foreach M,$(git_submodules),$(eval $(M)_GIT_SUBMODULE = $(SRC)/$(M)/.git))
 .PRECIOUS: $(SRC)/%/.git
 $(SRC)/%/.git :
@@ -45,7 +52,10 @@ $(SRC)/%/.git :
 	  git submodule update $*
 
 sipx.git :
-	$(MAKE) -B $(foreach S,$(git_submodules),$($(S)_GIT_SUBMODULE))
+	$(MAKE) -B $(foreach S,$(git_submodules) $(git_custommodules),$($(S)_GIT_SUBMODULE))
+
+# pull in dependency make fragments
+include $(SRC)/mak/*.sipxecs.mk
 
 build_on_change= find $(SRC)/$(PROJ)/ \( ! -regex '.*\/\.git/.*' \) -a  \( -type f -newer $1 -a $(build_on_change_var) \)
 build_on_change_var = $(build_on_change_$(origin $(PROJ)_BUILD_ON_CHANGE))

