diff --git a/OpenACD b/OpenACD
index 4c2722a..9ecd844 160000
--- a/OpenACD
+++ b/OpenACD
@@ -1 +1 @@
-Subproject commit 4c2722ace4b25c06cd66a24166b6fe0d21f26d3f
+Subproject commit 9ecd84421b161decdf40a316fa01f5f3559597d1
diff --git a/freeswitch b/freeswitch
index ee579db..79fe1b9 160000
--- a/freeswitch
+++ b/freeswitch
@@ -1 +1 @@
-Subproject commit ee579db74a23c4a42af711b3eb84c9db96647866
+Subproject commit 79fe1b9d26fe8bbc59751e9818ed9987ac2eacb0
diff --git a/sipXconfig/web/context/WEB-INF/cdr/CdrTable.html b/sipXconfig/web/context/WEB-INF/cdr/CdrTable.html
index 1167358..a272b07 100644
--- a/sipXconfig/web/context/WEB-INF/cdr/CdrTable.html
+++ b/sipXconfig/web/context/WEB-INF/cdr/CdrTable.html
@@ -7,6 +7,11 @@
     <span jwcid="@Insert"
       value="ognl:row.termination"
       format="bean:terminationFormat" />
+    <span jwcid="@If" condition="ognl:isHomerEnabled" renderTag="false">
+      <a jwcid="@Any" href="ognl:homerLink" target="_blank">
+        <img jwcid="@Image" image="asset:link" align="absmiddle" title="Go to details" />
+      </a>
+    </span>
   </span>
   <span jwcid="durationColumnValue@Block">
     <span jwcid="@Insert"
diff --git a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/cdr/CdrTable.java b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/cdr/CdrTable.java
index 6a10bba..04e3836 100644
--- a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/cdr/CdrTable.java
+++ b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/cdr/CdrTable.java
@@ -11,6 +11,9 @@ package org.sipfoundry.sipxconfig.site.cdr;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
+import java.util.Date;
+import java.util.Calendar;
+import java.text.SimpleDateFormat;
 
 import org.apache.tapestry.BaseComponent;
 import org.apache.tapestry.IAsset;
@@ -21,6 +24,8 @@ import org.apache.tapestry.annotations.InjectState;
 import org.apache.tapestry.annotations.Parameter;
 import org.apache.tapestry.contrib.table.model.ITableColumn;
 import org.apache.tapestry.services.ExpressionEvaluator;
+import org.sipfoundry.sipxconfig.feature.FeatureManager;
+import org.sipfoundry.sipxconfig.feature.LocationFeature;
 import org.sipfoundry.sipxconfig.cdr.Cdr;
 import org.sipfoundry.sipxconfig.common.CoreContext;
 import org.sipfoundry.sipxconfig.common.SipUri;
@@ -43,6 +48,8 @@ public abstract class CdrTable extends BaseComponent {
     private static final Pattern AOR_RE = Pattern.compile(AOR);
     private static final Pattern FULL_USER_RE = Pattern.compile("(?:\\w+ *)+ - (\\d+)");
 
+    private static final String HOMER_LINK = "/webhomer/index.php?component=search&task=result&callid=%s&location[]=1&from_date=%s&to_date=%s";
+
     @InjectObject(value = "service:tapestry.ognl.ExpressionEvaluator")
     public abstract ExpressionEvaluator getExpressionEvaluator();
 
@@ -65,6 +72,9 @@ public abstract class CdrTable extends BaseComponent {
     @InjectObject(value = "spring:coreContext")
     public abstract CoreContext getCoreContext();
 
+    @InjectObject(value = "spring:featureManager")
+    public abstract FeatureManager getFeatureManager();
+
     @InjectState(value = "userSession")
     public abstract UserSession getUserSession();
 
@@ -107,6 +117,9 @@ public abstract class CdrTable extends BaseComponent {
     @Asset("/images/retrievepark.png")
     public abstract IAsset getRetrieveParkIcon();
 
+    @Asset("/images/go.png")
+    public abstract IAsset getLink();
+
     /**
      * Implements click to call link
      *
@@ -129,6 +142,11 @@ public abstract class CdrTable extends BaseComponent {
         return getUserSession().getUser(getCoreContext());
     }
 
+    public boolean isHomerEnabled() {
+        LocationFeature HomerWeb = new LocationFeature("homer_web");
+        return getFeatureManager().isFeatureEnabled(HomerWeb);
+    }
+
     public IAsset getRecipientTypeIcon() {
         IAsset recipientIcon = null;
         String rowCalleeRoute = null;
@@ -223,4 +241,18 @@ public abstract class CdrTable extends BaseComponent {
         }
         return false;
     }
+
+    public String getHomerLink() {
+        String callid = getRow().getCallId();
+        SimpleDateFormat ft = new SimpleDateFormat ("dd-MM-yyyy");
+        Date start = getRow().getStartTime();
+        Date end = getRow().getEndTime();
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(end);
+        cal.add(Calendar.DATE, 1);
+        end = cal.getTime();
+        return String.format(HOMER_LINK, callid,
+                             ft.format(start),
+                             ft.format(end));
+    }
 }
