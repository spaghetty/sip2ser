From c64184ad93a00346fbcc0afff6da0ce5bcd1ae64 Mon Sep 17 00:00:00 2001
From: Domenico Chierico <domenico.chierico@sip2ser.it>
Date: Sat, 10 Mar 2012 03:54:21 +0100
Subject: [PATCH] add check for unset did, prevent exception

---
 .../sipfoundry/sipxconfig/acd/AcdContextImpl.java  |    2 +-
 .../admin/callgroup/CallGroupContextImpl.java      |    2 +-
 .../admin/dialplan/DialPlanContextImpl.java        |    2 +-
 .../conference/ConferenceBridgeContextImpl.java    |    2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/acd/AcdContextImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/acd/AcdContextImpl.java
index 1cd61ce..4baf506 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/acd/AcdContextImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/acd/AcdContextImpl.java
@@ -138,7 +138,7 @@ public class AcdContextImpl extends SipxHibernateDaoSupport implements AcdContex
             if (!m_aliasManager.canObjectUseAlias(line, did)) {
                 throw new ExtensionInUseException(LINE, did);
             }
-            if (did.equals(extension)) {
+            if (did!=null && did.equals(extension)) {
                 throw new DidInUseException(LINE, did);
             }
         }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/callgroup/CallGroupContextImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/callgroup/CallGroupContextImpl.java
index ef6a83f..4c9e68b 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/callgroup/CallGroupContextImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/callgroup/CallGroupContextImpl.java
@@ -80,7 +80,7 @@ public class CallGroupContextImpl extends SipxHibernateDaoSupport implements Cal
         if (!m_aliasManager.canObjectUseAlias(callGroup, did)) {
             throw new ExtensionInUseException(huntGroupTypeName, did);
         }
-        if (did.equals(extension)) {
+        if (did!=null && did.equals(extension)) {
             throw new DidInUseException(huntGroupTypeName, did);
         }
         getHibernateTemplate().saveOrUpdate(callGroup);
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/dialplan/DialPlanContextImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/dialplan/DialPlanContextImpl.java
index 1b37560..48d5a22 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/dialplan/DialPlanContextImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/admin/dialplan/DialPlanContextImpl.java
@@ -161,7 +161,7 @@ public abstract class DialPlanContextImpl extends SipxHibernateDaoSupport implem
         if (!m_aliasManager.canObjectUseAlias(ar, attendantDid)) {
             throw new ExtensionInUseException(DIALING_RULE, attendantDid);
         }
-        if (attendantDid.equals(attendantExtension)) {
+        if (attendantDid!=null && attendantDid.equals(attendantExtension)) {
             throw new DidInUseException(DIALING_RULE, attendantDid);
         }
 
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/conference/ConferenceBridgeContextImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/conference/ConferenceBridgeContextImpl.java
index cee8f8f..3153854 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/conference/ConferenceBridgeContextImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/conference/ConferenceBridgeContextImpl.java
@@ -120,7 +120,7 @@ public class ConferenceBridgeContextImpl extends HibernateDaoSupport implements
         if (!m_aliasManager.canObjectUseAlias(conference, did)) {
             throw new ExtensionInUseException(CONFERENCE, did);
         }
-        if (did.equals(extension)) {
+        if (did!=null && did.equals(extension)) {
             throw new DidInUseException(CONFERENCE, did);
         }
     }
-- 
1.7.4.4

